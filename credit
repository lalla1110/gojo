# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib import gridspec

# Read the credit card dataset
df = pd.read_csv("creditcard.csv")

# Display the first few rows of the DataFrame
df.head()

# Separate fraud and valid transactions
fraud = df[df["Class"] == 1]
valid = df[df["Class"] == 0]

# Calculate the fraction of fraudulent transactions
outlier_frac = len(fraud) / float(len(valid))

# Print the number of fraudulent transactions
print("Number of fraudulent transactions:", len(fraud))

# Calculate and visualize the correlation matrix
correl = df.corr()
sns.heatmap(correl, vmax=10, square=True)

# Separate features (x) and target variable (y)
x = df.drop(['Class'], axis=1)
y = df['Class']

# Split the data into training and testing sets
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=50)

# Build a Gaussian Naive Bayes classifier
from sklearn.naive_bayes import GaussianNB
gb = GaussianNB()

# Fit the classifier to the training data
gb.fit(x_train, y_train)

# Make predictions on the training data
pred_train = gb.predict(x_train)

# Evaluate the classifier's performance on the training data
from sklearn.metrics import classification_report
print("Classification Report on Training Data:\n", classification_report(y_train, pred_train))


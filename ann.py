# -*- coding: utf-8 -*-
"""ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gy1J9wpNP8qjXn8VC2UE_WtwqywoMS8S
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib import pyplot
from sklearn.model_selection import train_test_split
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import RobustScaler,OneHotEncoder
from sklearn.metrics import confusion_matrix,precision_score,accuracy_score,recall_score

df = pd.read_csv("Churn_Modelling.csv")
df.head()

df.shape



df["Exited"].value_counts()

df.drop(["CustomerId","Surname"],axis=1)

x = df.drop('Exited',axis=1)
y= df.Exited
y.value_counts()

x_train,x_test,y_train,y_test =train_test_split(x,y,test_size=0.2,random_state=0)

x.columns

num_cols=['CreditScore','Age', 'Tenure', 'Balance','NumOfProducts',
'EstimatedSalary']
cat_cols=['Geography','Gender', 'HasCrCard', 'IsActiveMember']

p=Pipeline(steps=[('ct',ColumnTransformer(transformers=[("s1",RobustScaler(),num_cols),("s2",OneHotEncoder(handle_unknown='ignore'),cat_cols)])),('mod',LogisticRegression(random_state=0))])

p.fit(x_train,y_train)

preds=p.predict(x_test)

print(preds[:15])

print(confusion_matrix(y_test,preds))



print(confusion_matrix(y_test,preds,labels=(0,1)))

